# I either build "natively" on an altair-duino, or use zxcc.
#
f80 =blank
f80 =charat
f80 =cmdln
f80 =input
f80 =instr
f80 =left
f80 =mark
f80 =mid
f80 =mkstr
f80 =new
f80 =releas
f80 =right
f80 =str
f80 =strcat
f80 =strcmp
f80 =strcpy
f80 =strget
f80 =strlen
f80 =stroff
f80 =strpri
f80 =strput
f80 =temp
f80 =trim
f80 =char
f80 =ichar
f80 =upper
f80 =lower
f80 =isnum
f80 =isalfa
f80 =rdcard
f80 =avail
f80 =strclr
# m80 =conout
m80 =conrbf
m80 =push
m80 =pop
m80 =dadsp
m80 =sphl
m80 =varptr

# manually build library:
# (under zxcc, I ue cut and paste to enter command. Order does count)
# lib80
# strlib=
# input,cmdln,str,strpri,charat,left,mark,mid,new,releas,right
# strcat,strcmp,strcpy,strget,strlen,stroff,strput,temp,instr
# blank,trim,mkstr,conrbf,char,ichar,push,pop,dadsp,sphl,varptr
# upper,lower,isnum,isalfa,rdcard,avail,strclr
# /e

# Assume we have strlib built, build string.com test:
# note bug in l80: strlib/s removes forlib request, so we have to be explicit

# f80 =string/l
# f80 =strsto/l
# l80 strsto,string,strlib/s,forlib/s,string/n/y/e

